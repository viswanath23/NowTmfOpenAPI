<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_24823_tm.TMF633_ServiceCatalog</api_name>
        <caller_access>1</caller_access>
        <client_callable>false</client_callable>
        <description/>
        <name>TMF633_ServiceCatalog</name>
        <script><![CDATA[var TMF633_ServiceCatalog = Class.create();
TMF633_ServiceCatalog.prototype =  Object.extendsObject(x_24823_tm.EventListnerUtils,{
    initialize: function() {
        this.logUtils = new x_24823_tm.InboundWsLogUtils();
        this.logObj = "";
        this.SUCCESSFULLY_CREATED_HTTP_CODE = "201";
    },

    /***
	 * processCreateServiceSpecification -  Will process inbound Resource request for Create Service Specification
         * @param: (M) requestObj - request object as created in inbound scripted API
         * @param: (M) responseObj - request object as created in inbound scripted API
    	
         * @return- responseObj
         *
         ***/
    processCreateServiceSpecification: function(requestObj, responseObj, restResourceId) {
        try {
            this.logObj = this.logUtils.createInbLog(requestObj, restResourceId);
           var requestData = requestObj.body.data; // Returns the request Object in JSON format.
            this.processEventRequest(requestData);
            this.buildCreateServiceSpecificationResponse(responseObj);
            return responseObj;
        } catch (err) {
            gs.error("TMF633_ServiceCatalog::processCreateServiceSpecification >> Error occured" + err.toString());
        }
    },
    /***
	 * executeCreateServiceSpecification -  Will process inbound Resource request for Create Service Specification
         * @param: (M) requestObj - request object as created in inbound scripted API
         * @param: (M) responseObj - request object as created in inbound scripted API
    	
         * @return- responseObj
         *
         ***/
    executeCreateServiceSpecification: function(requestData) {
        try {
             var prefix = "$.event.";
            if (!requestData) {
                throw "RequestBody Data is mandatory";
            }

            if (requestData instanceof Object) {
                /* Query the mapping matrix table to fetch the corresponding configuration for the given basetype & type. 
                 */
                var encQuery = "active=true";
                /* Filter with request @Basetype or * ie default value */
                encQuery = encQuery + (gs.nil(requestData["@baseType"])) ? "^base_type=*" : "^base_type=*^ORbase_type=" + requestData["@baseType"];
                /* Filter with request @Type or * ie default value  */
                encQuery = encQuery + (gs.nil(requestData["@type"])) ? "^type=*" : "^type=*^type=" + requestData["@type"];

                var grMappingConfig = new GlideRecord("x_24823_tm_mapping_sheet");
                grMappingConfig.addEncodedQuery(encQuery);
                grMappingConfig.orderByDesc('order'); // If multiple records are fetched, selected the record with hightest value in the Order field
                grMappingConfig.query();

                if (grMappingConfig.next()) {
                    var configObj = JSON.parse(grMappingConfig.configuration_data);
                    var colMapping = configObj.columnMapping;

                    var grTargetRecord = new GlideRecord(configObj.servicenowTable + "");
                    grTargetRecord.initialize();
                    for (var i in colMapping) {
                        grTargetRecord.setValue(colMapping[i].servicenowColumn + "", x_24823_tm.jsonPath(requestData, prefix + colMapping[i].pathname).toString());
                    }
                    grTargetRecord.insert();
                } else {
                    throw "Active mapping configuration record not found with the BaseType {0}, Type {1}", [requestData["@baseType"], requestData["@type"]];
                }

            }

        } catch (err) {
            gs.error("TMF633_ServiceCatalog::executeCreateServiceSpecification >> Error occured :\n" + err.toString());
        }
    },

    buildCreateServiceSpecificationResponse: function(responseObj) {
        try {
            var body = {};
            body.message = "Service Specification is created successfully";
            this.logUtils.updateInbLog(this.logObj, JSON.stringify(body), "2", this.SUCCESSFULLY_CREATED_HTTP_CODE);
            responseObj.setStatus(this.SUCCESSFULLY_CREATED_HTTP_CODE);
            responseObj.setBody(body);

        } catch (err) {
            gs.error("TMF633_ServiceCatalog::buildCreateServiceSpecificationResponse >> Error occured" + err.toString());
        }
    },



    type: 'TMF633_ServiceCatalog'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>viswanath23@gmail.com</sys_created_by>
        <sys_created_on>2020-05-26 06:26:03</sys_created_on>
        <sys_id>ae423081db855010357d29e1ca9619a8</sys_id>
        <sys_mod_count>23</sys_mod_count>
        <sys_name>TMF633_ServiceCatalog</sys_name>
        <sys_package display_value="TMF catalyst" source="x_24823_tm">f770b6d1db185050357d29e1ca96196f</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_scope display_value="TMF catalyst">f770b6d1db185050357d29e1ca96196f</sys_scope>
        <sys_update_name>sys_script_include_ae423081db855010357d29e1ca9619a8</sys_update_name>
        <sys_updated_by>viswanath23@gmail.com</sys_updated_by>
        <sys_updated_on>2020-07-07 11:25:41</sys_updated_on>
    </sys_script_include>
</record_update>
